package steps;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;


// Use the information obtained in the previous steps to successfully inject the database in order to bypass checks or modify, add, retrieve or delete data from the database

public class exploitsqlinjectionvulnerability {
@Given("prepare to Exploit SQL Injection vulnerability")
public void preexploitsqlinjectionvulnerability(){
// None
// User-controllable input that is not properly validated by the application as part of SQL queries.
}
@When("Try to Exploit SQL Injection vulnerability")
public void tryexploitsqlinjectionvulnerability(){
//  Try one of the following techniques :
   //1.  Use information about how to inject commands into SQL queries as well as information about the database schema to execute attacks such as dropping tables, inserting records, etc.
}@Then("Assert the success of Exploit SQL Injection vulnerability")
public void assexploitsqlinjectionvulnerability(){
//  Assert one of the following indications :
   //  -Attacker achieves goal of unauthorized system access, denial of service, etc.
}
}