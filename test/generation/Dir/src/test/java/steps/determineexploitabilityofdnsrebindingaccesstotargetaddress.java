package steps;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;


// The attacker can then use scripts in the content the target retrieved from the attacker in the original message to exfiltrate data from the named internal addresses.

public class determineexploitabilityofdnsrebindingaccesstotargetaddress {
@Given("prepare to Determine exploitability of DNS rebinding access to target address")
public void predetermineexploitabilityofdnsrebindingaccesstotargetaddress(){
// The attacker must serve some web content that a victim accesses initially. This content must include executable content that queries the attackers' DNS name (to provide the second DNS resolution) and then performs the follow-on attack against the internal system. The attacker also requires a customized DNS server that serves an IP address for their registered DNS name, but which resolves subsequent requests by a single client to addresses internal to that client's network.
// The target browser must access content server from the attacker controlled DNS name. Web advertisements are often used for this purpose. The target browser must honor the TTL value returned by the attacker and re-resolve the attackers' DNS name after initial contact.
}
@When("Try to Determine exploitability of DNS rebinding access to target address")
public void trydetermineexploitabilityofdnsrebindingaccesstotargetaddress(){
//  Try one of the following techniques :
   //.  
}@Then("Assert the success of Determine exploitability of DNS rebinding access to target address")
public void assdetermineexploitabilityofdnsrebindingaccesstotargetaddress(){
//  Assert one of the following indications :
   //  -The attacker's script is executed in victim's browser.
}
}